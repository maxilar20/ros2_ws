// generated from rosidl_adapter/resource/msg.idl.em
// with input from baxter_core_msgs/msg/EndEffectorProperties.msg
// generated code does not contain a copyright notice


module baxter_core_msgs {
  module msg {
    module EndEffectorProperties_Constants {
      @verbatim (language="comment", text=
        "End Effector type enumeration, for the UI:")
      const uint8 NO_GRIPPER = 0;
      const uint8 SUCTION_CUP_GRIPPER = 1;
      const uint8 ELECTRIC_GRIPPER = 2;
      const uint8 PASSIVE_GRIPPER = 3;
    };
    struct EndEffectorProperties {
      @verbatim (language="comment", text=
        "EndEffectorId")
      uint32 id;

      uint8 ui_type;

      @verbatim (language="comment", text=
        "Manufacturer name")
      string manufacturer;

      @verbatim (language="comment", text=
        "Product name")
      string product;

      @verbatim (language="comment", text=
        "Serial number, optional")
      string serial_number;

      @verbatim (language="comment", text=
        "Hardware revision, optional")
      string hardware_rev;

      @verbatim (language="comment", text=
        "Firmware revision, optional")
      string firmware_rev;

      @verbatim (language="comment", text=
        "Firmware date, optional")
      string firmware_date;

      @verbatim (language="comment", text=
        "End Effector Capabilities" "\n"
        "true if the gripper has calibration")
      boolean has_calibration;

      @verbatim (language="comment", text=
        "true if the gripper has grip/release control")
      boolean controls_grip;

      @verbatim (language="comment", text=
        "true if the gripper has grip sense")
      boolean senses_grip;

      @verbatim (language="comment", text=
        "true if the gripper has reverse-grip mode")
      boolean reverses_grip;

      @verbatim (language="comment", text=
        "true if the gripper has force control")
      boolean controls_force;

      @verbatim (language="comment", text=
        "true if the gripper has force sense")
      boolean senses_force;

      @verbatim (language="comment", text=
        "true if the gripper has position control")
      boolean controls_position;

      @verbatim (language="comment", text=
        "true if the gripper has position sense")
      boolean senses_position;

      @verbatim (language="comment", text=
        "JSON; other properties")
      string properties;
    };
  };
};
